import type { NextPage } from 'next';
import { useState, useEffect } from 'react';
import Head from 'next/head';
import Board from '../dist/board';

const Home: NextPage = () => {
  const [tileState, setTileState] = useState({});
  const [activePlayer, setActivePlayer] = useState(0);
  const [moveCount, setMoveCount] = useState(0);
  const [gameActive, setGameActive] = useState(true);
  const [gameOutcome, setGameOutcome] = useState(null);

  function toggleTile(player: number, tileNumber: number): void {
    if (!tileState[tileNumber] && gameActive) {
      // Only run function if tile has not been selected
      const symbol = player ? 'X' : 'O';
      setActivePlayer(player ? 0 : 1);
      setTileState({ ...tileState, [tileNumber]: symbol });
      setMoveCount(moveCount + 1);
    } else if (!gameActive) console.log('game already over');
    else console.log('tile taken');
  }

  useEffect(() => {
    //check win
    const possibleWins: number[][] = [
      [1, 2, 3], //row-top
      [4, 5, 6], //row-middle
      [7, 8, 9], //row-bottom
      [1, 4, 7], //column-left
      [2, 5, 8], //column-middle
      [3, 6, 9], //column-right
      [1, 5, 9], //diagonal-topL-bottomR
      [3, 5, 7], //diagonal-topR-bottomL
    ];

    if (Object.keys(tileState).length > 3) {
      possibleWins.forEach((arr) => {
        const values: number[] = arr.map((t: number) => tileState[t]);
        if (
          !values.includes(undefined) &&
          values[0] === values[1] &&
          values[0] === values[2]
        ) {
          console.log('WIN');
          setGameActive(false);
          setGameOutcome(values[0]);
        }
      });
      if (moveCount === 9) console.log('staleMate');
    }
  }, [tileState, moveCount]);

  function resetGame() {
    setTileState({});
    setActivePlayer(0);
    setMoveCount(0);
    setGameActive(true);
  }

  return (
    <div className="h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="h-full w-full test-border flex flex-col">
        <h2>Player Turn: {activePlayer ? 'X' : 'O'}</h2>
        <Board
          tileCount={9}
          tileState={tileState}
          player={activePlayer}
          toggleTile={toggleTile}
        />
        <button onClick={resetGame}>Reset</button>
        {/* //! change color on win/stalemate */}
        {/* <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div> */}
      </main>

      {/* <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer> */}
    </div>
  );
};

export default Home;
